package ejemplosJDBC;

/*
 * Consultas.java

 */

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.*;
import javax.swing.table.*;
import java.sql.*;
import java.util.*;

/**
 *
 * @author
 */
public class ej05MetaGenerico extends javax.swing.JFrame {
    private Connection cnn;

    /** Creates new form Consultas */
    public ej05MetaGenerico() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnConectar = new javax.swing.JButton();
        btnEjecutar = new javax.swing.JButton();
        btnDesconectar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        btnConectar.setLabel("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });
        jPanel1.add(btnConectar);

        btnEjecutar.setEnabled(false);
        btnEjecutar.setLabel("Ejecutar SQL");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEjecutar);

        btnDesconectar.setText("Desconectar");
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });
        jPanel1.add(btnDesconectar);

        btnSalvar.setText("Salvar...");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar);

        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jSplitPane1.setDividerLocation(100);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jScrollPane1.setViewportView(jTextArea1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane2.setViewportView(jTable1);

        jSplitPane1.setRightComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
// TODO add your handling code here:
        PrintWriter streamSalida = null;
        JFileChooser chooser = new JFileChooser();
        chooser.showSaveDialog(this);
        final File f = chooser.getSelectedFile();
        try {
            streamSalida = new PrintWriter (new FileWriter(f));

            for (int j = 0; j < jTable1.getColumnCount(); j++) {


                streamSalida.print(jTable1.getColumnName(j));
                streamSalida.print(" ;");
            }

            streamSalida.println();



            for (int i = 0; i < jTable1.getRowCount(); i++) {
                for (int j = 0; j < jTable1.getColumnCount(); j++) {
                    if (jTable1.getValueAt(i,j) != null) {

                        streamSalida.print(jTable1.getValueAt(i,j).toString());
                    }
                    else {

                        streamSalida.print(" ");
                    }

                    streamSalida.print(" ;");
                }
                streamSalida.println();
                //System.out.println();
            }
            streamSalida.close();
        }
        catch (Exception e) {
            if (streamSalida != null)   streamSalida.close();
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
// TODO add your handling code here:
        try {
            cnn.close();
            btnEjecutar.setEnabled(false);
        }
        catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed
        try {
            Statement st = cnn.createStatement();
            String sql = jTextArea1.getText();
            if (st.execute(sql)) {
                ResultSet rs = st.getResultSet();
                ResultSetMetaData rsInfo = rs.getMetaData();
                DefaultTableModel model = new DefaultTableModel();
                for (int i=1; i<=rsInfo.getColumnCount(); i++) {
                    model.addColumn(rsInfo.getColumnName(i));
                }
                while (rs.next()) {
                    Vector valores = new Vector();
                    for (int i=1; i<=rsInfo.getColumnCount(); i++) {
                        valores.add(rs.getObject(i));
                    }
                    model.addRow(valores);
                }
                rs.close();
                jTable1.setModel(model);
                jTable1.setVisible(true);
            }
            else {
                jTable1.setVisible(false);
                JOptionPane.showMessageDialog(this,
                        Integer.toString(st.getUpdateCount()) + " filas afectadas");
            }
            st.close();
        }
        catch (SQLException ex) {
            JOptionPane optionPane = new JOptionPane() {
                public int getMaxCharactersPerLineCount() { return 60; };
            };
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
            optionPane.setMessage("ERROR " + Integer.toString(ex.getErrorCode()) + ": " +  ex.getMessage());
            JDialog dialog = optionPane.createDialog(this, "ERROR");
            dialog.setVisible(true);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }


    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        try {
            String url = "jdbc:mysql://localhost:3306/academiamysql";
            cnn = DriverManager.getConnection(url, "consultor", "consultorpass");
            btnEjecutar.setEnabled(true);
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error conectando con la BD: " + ex.getMessage());
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage());
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ej05MetaGenerico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
